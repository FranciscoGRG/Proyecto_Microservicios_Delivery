version: '3.8'

services:
  # ----------------------------------------------------------------------
  # 1. Bases de Datos 
  # ----------------------------------------------------------------------

  # Base de Datos para User Service (PostgreSQL)
  user_db:
    image: postgres:15-alpine
    container_name: user_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: user_service_db
    volumes:
      - user_data:/var/lib/postgresql/data
    ports:
      - "5432:5432" # Conexión local: localhost:5432

  # Base de Datos para Catalog Service (MongoDB)
  catalog_db:
    image: mongo:6.0
    container_name: catalog_db
    environment:
      MONGO_INITDB_ROOT_USERNAME: catalog_user
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - catalog_data:/data/db
    ports:
      - "27017:27017" # Conexión local: localhost:27017

  # Base de Datos para Order y Payment Service (PostgreSQL Transaccional)
  transactional_db:
    image: postgres:15-alpine
    container_name: transactional_db
    environment:
      POSTGRES_USER: order_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: delivery_platform_db
    volumes:
      - order_data:/var/lib/postgresql/data
    ports:
      - "5433:5432" # Usamos 5433 localmente

  # ----------------------------------------------------------------------
  # 2. Mensajería Asíncrona (Kafka + Zookeeper)
  # ----------------------------------------------------------------------

  zookeeper:
    image: zookeeper:3.9
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888

  kafka:
    image: confluentinc/cp-kafka:5.5.1
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  # ----------------------------------------------------------------------
  # 3. Observabilidad / Trazabilidad (Zipkin)
  # ----------------------------------------------------------------------
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - "9411:9411" # UI de trazas en http://localhost:9411

# ----------------------------------------------------------------------
# Volúmenes persistentes
# ----------------------------------------------------------------------
volumes:
  user_data:
  catalog_data:
  order_data:
